############
# to do

# TODO make function that remove a block from inode and rearrange i_zone, indir_block,...(minixfs.py line 300)
# TODO add symlink struct ?
# TODO pop request from requests list (python) when finished and resend while not done
# TODO test if ack fail and resend request - pop request when finished
# TODO se proteger contre les faux write du client (annonce taille 100 mais ecriture 20)
# TODO verifier le principe : le client doit être très rigoureux, le server peut recevoir n'importe quoi
# TODO améliorer instentiation class minixfs local vs server

########
# Done

# TODO raise error in lookup_entry if filename don't exist
[30.05.2015] done with a try/except KeyError when search entry in dictionary
# TODO python raise exception if add file that already exist on disk
[30.05.2015] modified add_entry (test with lookup_entry first)
# TODO update link in add_entry
[30.05.2015] not necessary
# TODO add a dinode if dir is full and increase capacity
# TODO add size somewhere (when? write or balloc or ...?) and when add_entry ? what's the new size of dinode ?
[23.05.2015] Done
# TODO improve selection between hosts port and filename=None in __init__()
[23.05.2015]  Done used fs_src (could be a better name!?)
# TODO add __del__ methode in remote_bloc_device.__del__()
[15.05.2015]  Done close the socket in __del__() methode
# TODO dans le C éviter les read(offset, size) en dehor des blocks
[12.05.2015]  Pas besoin le read du fd va generer une error que l'on remonte
# TODO in remote_bloc_device.write_bloc; if bloc < 1024 add padding
[03.05.2015]  Added with raise error if too long
# TODO if blk is not < 513*512+7  rise error
[01.05.2015] Done
# TODO insert filename in dinode
[01.05.2015] Done
# TODO check if we can do this ? use read_block() while initializing
[26.04.2015]  yes we can ;-)
